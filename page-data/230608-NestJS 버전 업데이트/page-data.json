{"componentChunkName":"component---src-templates-post-jsx","path":"/230608-NestJS 버전 업데이트/","result":{"data":{"site":{"siteMetadata":{"title":"yujuck"}},"markdownRemark":{"id":"5e6306c6-fa2c-5733-888c-2a6d5c2ebd6e","excerpt":"NestJS 9.3.0 버전부터 devTools 지원하니까 버전 업데이트 하면 좋을 것 같다는 얘기에 버전 업그레이드를 진행했다.\nNestJS에서 GraphQL을 같이 사용하고 있어 graphql의 버전도 같이 업데이트 해야하는 상황이였다. 1. 패키지 업데이트 yarn을 사용하고 있어 다음의 명령어로 업데이트를 진행하였다. yarn upgrade-int…","html":"<p>NestJS 9.3.0 버전부터 devTools 지원하니까 버전 업데이트 하면 좋을 것 같다는 얘기에 버전 업그레이드를 진행했다.\nNestJS에서 GraphQL을 같이 사용하고 있어 graphql의 버전도 같이 업데이트 해야하는 상황이였다.</p>\n<h3>1. 패키지 업데이트</h3>\n<p>yarn을 사용하고 있어 다음의 명령어로 업데이트를 진행하였다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> upgrade-interactive</code></pre></div>\n<p>yarn upgrade-interactive 명령어는 yarn outdated와 yarn upgrade를 조합한 커맨드라고 생각하면 된다.\n실행하면 설치되어있는 패키지들중에서 업그레이드를 하고 싶은 패키지를 선택하여 업그레이드를 진행할 수 있다.</p>\n<p>공식 문서를 보면</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> NestFactory<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>AppModule<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    snapshot<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">await</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>snapshot을 추가할 수 있어야하는데 nest의 버전이 낮으면 해당 부분에서 오류가 발생해서\n@nestjs/core 등 주요 패키지의 업데이트를 진행했다.</p>\n<h3>2. @nestjs/devtools-intergration 설치</h3>\n<p>devtools를 사용하기 위해서는 위 패키지를 설치해줘야한다.\n여기서 조금 문제가 있었는데, 계속 위 패키지를 설치하려고 하면 사내 npm 패키지 저장소를 참조하는 것이었다..\n공식문서에서 말하는 것처럼 @nestjs/graphql@11 로 설치를 해도 잘 안되서 그냥 @nestjs/graphql 삭제 후 다시 설치한 다음에\n다시 @nestjs/devtools-intergration 설치를 시도했는데 잘 넘어갔다!</p>\n<h3>3. graphql 관련 패키지들 업그레이드의 사이드이펙트(?)</h3>\n<p>@nestjs/graphql 패키지를 <code class=\"language-text\">10.1.7</code>에서 <code class=\"language-text\">11.0.5</code>로 업데이트를 하고 나니\n<code class=\"language-text\">GraphQLModule.forRoot</code>의 첫번째 인자로 전달하는 options 타입인 ApolloDriverConfig가 변경이 되었는지,\n기존에 사용하던 cors와 debug 필드가 오류를 발생하고 있었다..\n어떻게 변경되어서 어떻게 사용해야하는지 열심히 찾아봐야하는 상황..!</p>\n<h4>cors</h4>\n<p>cors 관련 내용은 <a href=\"https://github.com/nestjs/graphql/issues/2752\">nestjs/graphql 레포지토리의 issues</a>에서 발견하게 되었다.\nNestjs에서 graphql 사용할 때에는 GraphQLModule에 따로 적어줬어야 했는데 이제는 Nestjs/common에서 제공해주는 <code class=\"language-text\">enableCors()</code>를 같이 사용하면 된다고 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> NestFactory<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>AppModule<span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">enableCors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  origin<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  methods<span class=\"token operator\">:</span> <span class=\"token string\">\"GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS\"</span><span class=\"token punctuation\">,</span>\n  credentials<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h4>debug</h4>\n<p>이 옵션은 요청에서 오류가 발생했을 때 response로 stacktrace를 전달해줄지에 대한 옵션이였다.\n클라이언트에게 stacktrace까지 제공하는 것은 일반적을 권장되지 않는다 하여 <code class=\"language-text\">debug: false</code>로 사용하고 있었는데 이 옵션이 사라져버렸다..!!\n아무리 검색을 해도 안나오고(ㅠㅠ) ApolloDriverConfig 타입을 봐도 못찾은 상황에서\n그래 없을리가 없지..! 하고 다시 천천히 ApolloDriverConfig에서 extends하고 있는 타입들을 살펴보니 눈에 띄는 필드가 하나 발견되었다.\n바로 <code class=\"language-text\">includeStacktraceInErrorResponses</code>!</p>\n<p>굉장히 직관적인 이름으로 변경이 되어있었다ㅋㅋㅋㅋㅋ\n다행히 잘 찾아내서 추가해주니 이전과 동일하게 stacktrace는 제거가 잘 되었다.. 휴..</p>\n<h3>결말</h3>\n<p>변경 후 devtools는 어떻게 사용하는거지? 싶어서 다시한번 <a href=\"https://docs.nestjs.com/devtools/overview\">공식문서</a>를 읽어보았다.\nsnapshot 추가하고 DevtoolsModule 추가해주고 하면 사용할 수 있는 줄 알았는데\n<a href=\"https://devtools.nestjs.com/\">https://devtools.nestjs.com/</a> 을 들어가서 로그인을 하니까 유료였다.....\n그냥 쓸 수 있는 줄 알고 바꾸자고 하셨던 것 같은데 알고보니 유료ㅠㅠ\n결국 devtools 사용은 안하는걸로 하고 어쩌다보니 nestjs 버전 업데이트와 graphql 버전 업데이트만 진행하게 된 슬픈지만 좋은 결말..?</p>\n<p>이상 만약 우리처럼 위의 옵션을 사용하고 있다가 업데이트 하고 보니 사라져서 어떻게 해야하나 싶은 분들을 위해 남기는 글이였습니다..</p>","frontmatter":{"title":"NestJS devtools 사용하려다 GraphQLModule 설정만 바꿔본 사람?","date":"June 08, 2023","update":"June 08, 2023","tags":["NestJS","GraphQL"],"series":null},"fields":{"slug":"/230608-NestJS 버전 업데이트/","readingTime":{"minutes":4.98}}},"seriesList":{"edges":[{"node":{"id":"cb37d4f9-0644-5fe7-bd14-cea51e78233d","fields":{"slug":"/230606/"},"frontmatter":{"title":"새로운 시작"}}},{"node":{"id":"5e6306c6-fa2c-5733-888c-2a6d5c2ebd6e","fields":{"slug":"/230608-NestJS 버전 업데이트/"},"frontmatter":{"title":"NestJS devtools 사용하려다 GraphQLModule 설정만 바꿔본 사람?"}}},{"node":{"id":"6a4deb43-0da5-52d2-b460-0271514139a1","fields":{"slug":"/230610-드럼 배워보기/"},"frontmatter":{"title":"드럼 배워보기"}}},{"node":{"id":"dbd2fcfc-e69c-59fb-9f10-0945a37f853d","fields":{"slug":"/230612-crontab 설정을 해보자/"},"frontmatter":{"title":"crontab 설정을 해보자"}}}]},"previous":{"fields":{"slug":"/230607-인터넷과 웹/"},"frontmatter":{"title":"인터넷과 웹"}},"next":{"fields":{"slug":"/230609-브라우저 정의, 기능, 기본 구조/"},"frontmatter":{"title":"브라우저 정의, 기능, 기본 구조"}}},"pageContext":{"id":"5e6306c6-fa2c-5733-888c-2a6d5c2ebd6e","series":null,"previousPostId":"6d508518-b23e-5d21-a534-e937bfd3b271","nextPostId":"5e7519b4-d12c-5c82-acbd-aa98a7368dfa"}},"staticQueryHashes":[]}